import streamlit as st
from st_audiorec import st_audiorec
import os

BASE_DIR = os.path.dirname(os.path.abspath(__file__))  # app.py dir
AUDIO_SAVE_PATH = os.path.normpath(os.path.join(BASE_DIR, "..", "audio"))  # audio dir
os.makedirs(AUDIO_SAVE_PATH, exist_ok=True)

# Page layout and header
st.set_page_config(page_title="Audio Recorder", page_icon="üéôÔ∏è", layout="centered")
st.title("üéôÔ∏è Voice Recognition Application")
st.subheader("Record and Save Your Audio")

st.write("Nh·∫•n **'Start Recording'** v√† n√≥i v√†o micro ƒë·ªÉ ghi √¢m:")

# Audio recording
wav_audio_data = st_audiorec()

if wav_audio_data is not None:
    if len(wav_audio_data) > 44:
        st.success("üéâ Ghi √¢m th√†nh c√¥ng! ƒêang ph√°t l·∫°i √¢m thanh...")

        if st.button("L∆∞u file √¢m thanh"):
            file_path = os.path.join(AUDIO_SAVE_PATH, "recorded_audio.wav")

            with open(file_path, "wb") as f:
                f.write(wav_audio_data)

            st.success(f"‚úÖ File ƒë√£ ƒë∆∞·ª£c l∆∞u th√†nh c√¥ng t·∫°i: `{file_path}`")
            st.audio(file_path, format="audio/wav")
    else:
        st.warning("‚ö†Ô∏è Kh√¥ng c√≥ d·ªØ li·ªáu ghi √¢m h·ª£p l·ªá. Vui l√≤ng th·ª≠ l·∫°i.")
else:
    st.info("‚ÑπÔ∏è Vui l√≤ng nh·∫•n **'Start Recording'** v√† n√≥i v√†o micro.")

# Footer
st.markdown("---")
st.caption("·ª®ng d·ª•ng nh·∫≠n di·ªán gi·ªçng n√≥i d·ª±a tr√™n Whisper Model")
