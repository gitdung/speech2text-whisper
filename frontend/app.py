import streamlit as st
from st_audiorec import st_audiorec
import os
import requests
import io

BACKEND_URL = "http://127.0.0.1:8001/predict"

# Page layout and header
st.set_page_config(page_title="Audio Recorder", page_icon="üéôÔ∏è", layout="centered")
st.title("üéôÔ∏è Voice Recognition Application")
st.subheader("Record and Save Your Audio")

st.write("Nh·∫•n **'Start Recording'** v√† n√≥i v√†o micro ƒë·ªÉ ghi √¢m:")

# Audio recording
wav_audio_data = st_audiorec()

if wav_audio_data is not None:
    if len(wav_audio_data) > 44:
        st.success("üéâ Ghi √¢m th√†nh c√¥ng! ƒêang ph√°t l·∫°i √¢m thanh...")

        if st.button("Nh·∫≠n di·ªán gi·ªçng n√≥i"):
            audio_bytes = io.BytesIO(wav_audio_data)

            files = {'file': ('recorded_audio.wav', audio_bytes, 'audio/wav')}
            response = requests.post(BACKEND_URL, files=files)

            if response.status_code == 200:
                result = response.json().get("result")
                st.write("**Transcription**:", result)
            else:
                st.error("‚ùå X·∫£y ra l·ªói khi nh·∫≠n di·ªán gi·ªçng n√≥i.")
    else:
        st.warning("‚ö†Ô∏è Kh√¥ng c√≥ d·ªØ li·ªáu ghi √¢m h·ª£p l·ªá. Vui l√≤ng th·ª≠ l·∫°i.")
else:
    st.info("‚ÑπÔ∏è Vui l√≤ng nh·∫•n **'Start Recording'** v√† n√≥i v√†o micro.")

# Footer
st.markdown("---")
st.caption("·ª®ng d·ª•ng nh·∫≠n di·ªán gi·ªçng n√≥i d·ª±a tr√™n Whisper Model")
